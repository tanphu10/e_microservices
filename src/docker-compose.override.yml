version: '3.8'

services:
    #data section
   
  #orderdb: sql server
  orderdb:
    container_name: orderdb
    environment:
        SA_PASSWORD: "Passw0rd!"
        ACCEPT_EULA: "Y"
    restart: always
    volumes:
        - sqlserver_data:/var/lib/sqlserver/data
    ports:
        - "1435:1433"
  #productdb
  productdb:
    container_name: productdb
    environment:
        MYSQL_ROOT_PASSWORD: "Ptp@899398"
        MYSQL_TCP_PORT: 3307
        MYSQL_DATABASE: ProductDB
    restart: always
    volumes:
        - mysql_data:/var/lib/mysql
    ports:
        - "3307:3306"
  #customserdb:postgres  
  customerdb:
    container_name: customerdb
    environment:
        - POSTGRES_USER=admin
        - POSTGRES_PASSWORD=admin1234
        - POSTGRES_DB=CustomerDb
    restart: always
    ports:
        - "5433:5432"
    volumes:
        - postgres_data:/var/lib/postgresql/data
  #basketdb: redis
  basketdb:
    container_name: basketdb
    restart: always
    ports:
            - "6379:6379"
  #inventory: mongo
  inventorydb:
    container_name: inventorydb
    restart: always
    ports:
         - "27017:27017"
    volumes:
         - mongo_data:/data/db

  #infrastructure section
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
         - "5672:5672"
         - "15672:15672"
 
  pgadmin:
    container_name: pgadmindb
    environment:
        - PGADMIN_DEFAULT_EMAIL=admin@tedu_microsevice.com
        - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
        - "5050:80"
    volumes:
        - pgadmin_data:/root/.pgadmin
 
  portainer:
    container_name: portainer
    restart: always
    ports:
        - "8080:8000"
        - "9000:9000"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - portainer_data:/data
 
  elasticsearch:
    container_name: elasticsearch
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xms512m"
        - discovery.type=single-node 
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601"

  #microservice section
  product.api:
    container_name: product.api
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:80
        - "ConnectionStrings:DefaultConnectionString=Server=productdb;Port=3307;Database=ProductDB;Uid=root;Pwd=Ptp@899398;"
    depends_on: 
      - productdb
    ports:
      - "6002:80"
    restart: always
  customer.api:
    container_name: customer.api    
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:80
        - "ConnectionStrings:DefaultConnectionString=Server=customerdb;Port=5432;Database=CustomerDb;User Id=admin;Password=admin1234;"
    depends_on:
        - customerdb
    ports:
        - "6003:80"
    restart: always
  basket.api:
    container_name: basket.api    
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:80
        - "CacheSettings:ConnectionString=basketdb:6379"
    depends_on:
        - basketdb
    ports:
        - "6004:80"
    restart: always
  ordering.api:
    container_name: ordering.api    
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:80
        - "ConnectionStrings:DefaultConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=Passw0rd!;Multipleactiveresultsets=true"
    depends_on:
        - orderdb
    ports:
        - "6005:80"
    restart: always